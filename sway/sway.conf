### Variables

set $mod Mod1

set $left h
set $down j
set $up k
set $right l

set $term alacritty
set $editor emacs

for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
set $menu exec $term --class=launcher -e sway-launcher-desktop

### Output configuration

output * bg {{base02}} solid_color
#output * bg ~/dotfiles/wallpaper fill

# have a connected monitor be "to the left" of the main one logically
output HDMI-A-1 pos 0 0
output eDP-1 pos 1920 0

### Idle configuration
# Example:
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.



### Input configuration
# See `swaymsg -t get_inputs`, `man 5 sway-input`

input "type:keyboard" {
    xkb_layout "us,ru,ua"
    xkb_options "grp:shifts_toggle, ctrl:nocaps"
    repeat_delay 290
    repeat_rate 30
}

input "type:touchpad" {
    tap enabled
    dwt disabled
    natural_scroll enabled
    scroll_factor 0.3
}

input "type:pointer" {
    accel_profile flat
}



### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Start the editor
    bindsym $mod+e exec $editor

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+XF86Display exec 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 0
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+backslash layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

## Screenshot
bindsym Print exec grim - | wl-copy
bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy

#
bindsym XF86AudioMute        exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioMicMute     exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86MonBrightnessUp   exec light -A 5
bindsym XF86MonBrightnessDown exec light -U 5




bar {
    # waybar draws itself
    mode invisible
    status_command waybar
}

default_border pixel

hide_edge_borders smart

exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# notifications
exec mako


## redshift
# systemd service available, but requires a separate configuration file
# [gammastep-indicator] for tray icon also
exec gammastep -l 50:30

exec transmission-gtk --minimized

## GTK theme
## [https://github.com/swaywm/sway/wiki/GTK-3-settings-on-Wayland]

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'Arc-Dark'
    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
    gsettings set $gnome-schema font-name '{{sans_font_family}} {{sans_font_size}}'

    # touchpad while typing
    gsettings set org.gnome.desktop.peripherals.touchpad disable-while-typing false
}

# Basic color configuration using the Base16 variables for windows and borders.
# Property Name         Border     Background Text       Indicator  Child Border
client.focused          {{base0B}} {{base0B}} {{base00}} {{base0B}} {{base0B}}
client.focused_inactive {{base01}} {{base01}} {{base05}} {{base03}} {{base01}}
client.unfocused        {{base01}} {{base00}} {{base05}} {{base01}} {{base01}}
client.urgent           {{base08}} {{base08}} {{base00}} {{base08}} {{base08}}
client.placeholder      {{base00}} {{base00}} {{base05}} {{base00}} {{base00}}
#client.background       {{base07}}

include /etc/sway/config.d/*
